syntax = "proto3";

service RaftNode {
        rpc RequestVote(RequestVoteRequest) returns (ResultWithTerm);
        rpc AppendEntries(AppendEntriesRequest) returns (ResultWithTerm);
        rpc GetLeader(NoArgs) returns (LeaderResp);
        rpc Suspend(DurationArgs) returns (NoArgs);
        rpc SetValue(KeyValue) returns (BoolResult);
        rpc GetValue(Key) returns (Value);
        rpc Replicate(Entry) returns (BoolResult);
        rpc ConfirmReplication(KeyValue) returns (NoArgs);
}

message AppendEntriesRequest {
        int32 term = 1;
        int32 leaderId = 2;
        int32 prevLogIndex = 3;
        int32 prevLogTerm = 4;
        repeated Entry entries = 5;
        int32 leaderCommit = 6;
}

message Entry {
        int32 index = 1;
        int32 term = 2;
        string command = 3;
}

message RequestVoteRequest {
        string term = 1;
        string candidateId = 2;
        string lastLogIndex = 3;
        string lastLogTerm = 4;
}

message NoArgs {}

message Key {
        string key = 1;
}

message Value {
        optional string value = 1;
        bool result = 2;
}

message KeyValue {
        string key = 1;
        string value = 2;
}

message BoolResult{
        bool result = 1;
}

message ResultWithTerm {
        bool result = 1;
        int32 term = 2;
}

message DurationArgs {
        int32 duration = 1;
}

message LeaderResp {
        int32 leader_id = 1;
        string leader_addr = 2;
}